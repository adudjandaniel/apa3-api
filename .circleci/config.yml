version: 2.1
workflows:
  build_deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only:
                - main
          requires:
            - build

jobs:
  build:
    working_directory: ~/apa3-api
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
      - checkout
      - run:
          # Restore
          name: Restore Dependencies and Tools
          command: ls -a . & dotnet restore APA3/APA3.csproj
      - run:
          # Build Project
          name: Build Project
          command: dotnet build --no-restore APA3/APA3.csproj
      
  deploy:
    docker:
      # has docker installed
      - image: circleci/node
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Install .NET Core SDK
          command: |
            sudo apt-get install -y gpg
            wget -O - https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor -o microsoft.asc.gpg
            sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
            wget https://packages.microsoft.com/config/ubuntu/{os-version}/prod.list
            sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
            sudo chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg
            sudo chown root:root /etc/apt/sources.list.d/microsoft-prod.list
            sudo apt-get update; \
            sudo apt-get install -y apt-transport-https && \
            sudo apt-get update && \
            sudo apt-get install -y dotnet-sdk-3.1
      - run:
          name: Build and push Docker image to DockerHub
          command: |       
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=apa3-api' >> $BASH_ENV
            source $BASH_ENV
            docker build -t $DOCKER_USERNAME/$IMAGE_NAME -t $DOCKER_USERNAME/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push $DOCKER_USERNAME/$IMAGE_NAME